{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/clients/client-add/client-add.component.ts","./src/app/clients/client-add/client-add.component.html","./src/app/clients/client-edit/client-edit.component.ts","./src/app/clients/client-edit/client-edit.component.html","./src/app/clients/client-list/client-list.component.ts","./src/app/clients/client-list/client-list.component.html","./src/app/clients/client-view/client-view.component.ts","./src/app/clients/client-view/client-view.component.html","./src/app/clients/clients.component.ts","./src/app/clients/clients.component.html","./src/app/clients/clients.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { ClientsComponent } from './clients/clients.component';\r\nimport { ClientEditComponent } from './clients/client-edit/client-edit.component';\r\nimport { ClientViewComponent } from './clients/client-view/client-view.component';\r\nimport { ClientListComponent } from './clients/client-list/client-list.component';\r\nimport { ClientAddComponent } from './clients/client-add/client-add.component';\r\n\r\nconst appRoutes: Routes = [\r\n\t{ path: 'clients', component: ClientsComponent, children: [\r\n\t\t{ path: 'add', component: ClientAddComponent },\r\n\t\t{ path: 'edit/:id', component: ClientEditComponent },\r\n\t\t{ path: 'view/:id', component: ClientViewComponent },\r\n\t\t{ path: 'list', component: ClientListComponent }\r\n\t]},\r\n\t{ path: 'not-found', component: PageNotFoundComponent },\r\n\t{ path: '', redirectTo: '/clients/add', pathMatch:'full' },\r\n\t{ path: '**', redirectTo: '/not-found'}\r\n];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forRoot(appRoutes)\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\n\r\nexport class AppRoutingModule{\r\n\r\n}","import { Component, ElementRef, HostBinding, HostListener } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<br>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n// import { HttpModule } from '@angular/http';\r\nimport { AppComponent } from './app.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\n\r\nimport { AppRoutingModule } from './app-routing.model'; \r\nimport { AngularFileUploaderModule } from \"angular-file-uploader\";\r\n\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { ClientsComponent } from './clients/clients.component';\r\nimport { ClientListComponent } from './clients/client-list/client-list.component';\r\nimport { ClientEditComponent } from './clients/client-edit/client-edit.component';\r\nimport { ClientViewComponent } from './clients/client-view/client-view.component';\r\nimport { ClientAddComponent } from './clients/client-add/client-add.component';\r\nimport { ClientsService } from './clients/clients.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PageNotFoundComponent,\r\n    HeaderComponent,\r\n    ClientsComponent,\r\n    ClientListComponent,\r\n    ClientEditComponent,\r\n    ClientViewComponent,\r\n    ClientAddComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    AngularFileUploaderModule\r\n  ],\r\n  providers: [ClientsService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ClientsService } from '../clients.service';\r\n\r\n@Component({\r\n  selector: 'app-client-add',\r\n  templateUrl: './client-add.component.html',\r\n  styleUrls: ['./client-add.component.css']\r\n})\r\nexport class ClientAddComponent implements OnInit {\r\n\r\n  addClientForm: FormGroup;\r\n\r\n  imageData: string;\r\n\r\n  today = this.clService.getDate();\r\n\r\n  constructor(private clService: ClientsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.addClientForm = new FormGroup({\r\n      'fname': new FormControl(null, Validators.required),\r\n      'lname': new FormControl(null, Validators.required),\r\n      'email': new FormControl(null, [Validators.required, Validators.email]),\r\n      'datec': new FormControl(new Date().toDateString(), Validators.required),\r\n      'plc': new FormControl(null, Validators.required),\r\n      'dob': new FormControl(null),\r\n      'image': new FormControl(null),\r\n      'casedetails': new FormControl(null, Validators.required)\r\n    });\r\n\r\n    // console.log(this.getDate());\r\n  }\r\n\r\n  onFileSelected(event: Event){\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n\r\n    this.addClientForm.patchValue({image: file});\r\n    const allowedTypes = ['image/png', 'image/jpg', 'image/jpeg'];\r\n\r\n    if(file && allowedTypes.includes(file.type)){\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        this.imageData = reader.result as string;\r\n      }\r\n\r\n      reader.readAsDataURL(file);\r\n    }else{\r\n      alert('Unsupported image format');\r\n      this.addClientForm.patchValue({'image': null});\r\n      this.imageData = null;\r\n    }\r\n  }\r\n\r\n  setDOB(event: Event){\r\n    const dob = (<HTMLInputElement>event.target).value;\r\n    this.addClientForm.patchValue({'dob': dob});\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.addClientForm.valid){\r\n      this.clService.addClient(this.addClientForm.value);\r\n      alert('Client profiled');\r\n      this.addClientForm.reset();\r\n      this.imageData = '';\r\n    }else{\r\n      alert('Your information is not yet complete, please fill all required fields.');\r\n    }\r\n    // console.log(this.addClientForm.valid);\r\n    \r\n  }\r\n\r\n  \r\n\r\n\r\n  // afuConfig = {\r\n  //   formatsAllowed: \".jpg,.png\",\r\n  //   uploadAPI: {\r\n  //     url:\"https://localhost:3000/images\"\r\n  //   }\r\n  // };\r\n}\r\n","<form [formGroup]=\"addClientForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header bg-primary text-light\">\r\n            <i class=\"fa fa-user-plus\"> </i> \r\n            <b> Add Client</b>   \r\n        </div>\r\n        <div class=\"card-body\">\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fname\">First Name</label>\r\n                        <input type=\"text\" class=\"form-control\" required=\"required\" formControlName=\"fname\"/>\r\n                        <span *ngIf=\"!addClientForm.get('fname').valid && addClientForm.get('fname').touched\">Please enter your first name</span>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"lname\">Last Name</label>\r\n                        <input type=\"text\" class=\"form-control\" required=\"required\" formControlName=\"lname\"/>\r\n                        <span *ngIf=\"!addClientForm.get('lname').valid && addClientForm.get('lname').touched\">Please enter your last name</span>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"mail\">E-mail</label>\r\n                        <input type=\"email\" class=\"form-control\" required=\"required\" formControlName=\"email\"/>\r\n                        <span *ngIf=\"!addClientForm.get('email').valid && addClientForm.get('email').touched\">Please enter a valid email</span>\r\n                        <input type=\"text\" class=\"form-control\" required=\"required\" formControlName=\"datec\" hidden readonly/>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"plc\">Primary Legal Counsel</label>\r\n                        <input type=\"text\" class=\"form-control\" required=\"required\" formControlName=\"plc\"/>\r\n                        <span *ngIf=\"!addClientForm.get('plc').valid && addClientForm.get('plc').touched\">Please enter your primary legal counsel</span>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"dob\">Date of Birth</label>\r\n                        <input type=\"date\" class=\"form-control\" required=\"required\" formControlName=\"dob\"/>\r\n                        <span *ngIf=\"!addClientForm.get('dob').valid && addClientForm.get('dob').touched\">Date not set (consider retyping)</span>\r\n                        <!-- <input type=\"text\" class=\"form-control\" required=\"required\" formControlName=\"dob\" value=\"{{ dob }}\"/> -->\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"image\">Image</label>\r\n                        <!-- <angular-file-uploader \r\n                            [config]=\"afuConfig\">\r\n                        </angular-file-uploader> -->\r\n                        <input (change)=\"onFileSelected($event)\" type=\"file\" class=\"form-control\"/>\r\n                        <span *ngIf=\"!imageData\">Please select an image (not required)</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-8\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fname\">Case Details</label>\r\n                        <textarea type=\"text\" class=\"form-control\" required=\"required\" rows=\"5\" formControlName=\"casedetails\"></textarea>\r\n                        <span *ngIf=\"!addClientForm.get('casedetails').valid && addClientForm.get('casedetails').touched\">Please enter your case details</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                    <div *ngIf=\"imageData\">\r\n                        <img [src]=\"imageData\" [alt]=\"addClientForm.value.name\" class=\"img-thumbnail\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        <div class=\"card-footer\">\r\n            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm btn-block\">Submit</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Client } from '../clients.model';\r\nimport { ClientsService } from '../clients.service';\r\nimport 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-client-edit',\r\n  templateUrl: './client-edit.component.html',\r\n  styleUrls: ['./client-edit.component.css']\r\n})\r\nexport class ClientEditComponent implements OnInit {\r\n\r\n  client:Client[];\r\n\r\n  editClientForm: FormGroup;\r\n\r\n  imageData: string = '';\r\n\r\n  clientid: string;\r\n\r\n\r\n  constructor(private clService: ClientsService, private route: ActivatedRoute) { }\r\n  \r\n\r\n  ngOnInit(): void {\r\n\r\n    this.editClientForm = new FormGroup({\r\n      'fname': new FormControl(null, Validators.required),\r\n      'lname': new FormControl(null, Validators.required),\r\n      'email': new FormControl(null, [Validators.required, Validators.email]),\r\n      'plc': new FormControl(null, Validators.required),\r\n      'dob': new FormControl(null),\r\n      'image': new FormControl(null),\r\n      'casedetails': new FormControl(null, Validators.required)\r\n    });\r\n    \r\n    this.clientid = this.route.snapshot.params['id'];\r\n    \r\n    this.clService.getClient(this.clientid);\r\n\r\n    this.clService.fetchClient.subscribe(\r\n      (client) => {\r\n        this.client = client;\r\n\r\n        if(this.client[0].image){\r\n          this.imageData = this.client[0].image.toString();\r\n        }\r\n\r\n        this.editClientForm.setValue({\r\n          'fname': this.client[0].fname,\r\n          'lname': this.client[0].lname,\r\n          'email': this.client[0].email,\r\n          'plc': this.client[0].plc,\r\n          'dob': this.client[0].dob,\r\n          'image': null,\r\n          'casedetails': this.client[0].casedetails\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  onFileSelected(event: Event){\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n\r\n    this.editClientForm.patchValue({image: file});\r\n    const allowedTypes = ['image/png', 'image/jpg', 'image/jpeg'];\r\n\r\n    if(file && allowedTypes.includes(file.type)){\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        this.imageData = reader.result as string;\r\n      }\r\n\r\n      reader.readAsDataURL(file);\r\n    }else{\r\n      alert('Unsupported image format');\r\n      this.editClientForm.patchValue({'image': null});\r\n      this.imageData = null;\r\n    }\r\n  }\r\n\r\n  setDOB(event: Event){\r\n    const dob = (<HTMLInputElement>event.target).value;\r\n    this.editClientForm.patchValue({'dob': dob});\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.editClientForm.valid){\r\n      this.clService.updateClient(this.editClientForm.value, this.clientid);\r\n      alert('Client Data Updated');\r\n    }else{\r\n      alert('Your information is not yet complete, please fill all required fields.');\r\n    }\r\n    \r\n  }\r\n}\r\n","<form [formGroup]=\"editClientForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header bg-primary text-light\">\r\n            <i class=\"fa fa-edit\"> </i> \r\n            <b> Update Client</b>   \r\n        </div>\r\n        <div class=\"card-body\">\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fname\">First Name</label>\r\n                        <input type=\"text\" class=\"form-control\" required=\"required\" formControlName=\"fname\"/>\r\n                        <span *ngIf=\"!editClientForm.get('fname').valid && editClientForm.get('fname').touched\">Please enter your first name</span>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"lname\">Last Name</label>\r\n                        <input type=\"text\" class=\"form-control\" required=\"required\" formControlName=\"lname\"/>\r\n                        <span *ngIf=\"!editClientForm.get('lname').valid && editClientForm.get('lname').touched\">Please enter your last name</span>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"mail\">E-mail</label>\r\n                        <input type=\"email\" class=\"form-control\" required=\"required\" formControlName=\"email\"/>\r\n                        <span *ngIf=\"!editClientForm.get('email').valid && editClientForm.get('email').touched\">Please enter a valid email</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"plc\">Primary Legal Counsel</label>\r\n                        <input type=\"text\" class=\"form-control\" required=\"required\" formControlName=\"plc\"/>\r\n                        <span *ngIf=\"!editClientForm.get('plc').valid && editClientForm.get('plc').touched\">Please enter your primary legal counsel</span>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"dob\">Date of Birth</label>\r\n                        <input type=\"date\" class=\"form-control\" required=\"required\" formControlName=\"dob\"/>\r\n                        <span *ngIf=\"!editClientForm.get('dob').valid && editClientForm.get('dob').touched\">Date not set (consider retyping)</span>\r\n                        <!-- <input type=\"text\" class=\"form-control\" required=\"required\" formControlName=\"dob\" value=\"{{ dob }}\"/> -->\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"image\">Image</label>\r\n                        <input (change)=\"onFileSelected($event)\" type=\"file\" class=\"form-control\"/>\r\n                        <span *ngIf=\"!imageData\">Please select an image (not required)</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-8\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fname\">Case Details</label>\r\n                        <textarea type=\"text\" class=\"form-control\" required=\"required\" rows=\"5\" formControlName=\"casedetails\"></textarea>\r\n                        <span *ngIf=\"!editClientForm.get('casedetails').valid && editClientForm.get('casedetails').touched\">Please enter your case details</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                    <div *ngIf=\"imageData\">\r\n                        <img [src]=\"imageData\" [alt]=\"editClientForm.value.name\" class=\"img-thumbnail\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        <div class=\"card-footer\">\r\n            <button type=\"submit\" class=\"btn btn-outline-primary btn-sm btn-block\">Submit</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Client } from '../clients.model';\r\nimport { ClientsService } from '../clients.service';\r\nimport 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-client-list',\r\n  templateUrl: './client-list.component.html',\r\n  styleUrls: ['./client-list.component.css']\r\n})\r\nexport class ClientListComponent implements OnInit {\r\n\r\n  submitAction:string = '';\r\n\r\n  clients: Client[];\r\n\r\n  searchForm: FormGroup;\r\n\r\n  @ViewChild('search') searchOption: ElementRef;\r\n\r\n  constructor(private clService: ClientsService) {\r\n    \r\n  }\r\n\r\n  ngOnInit(){\r\n    this.clService.getClientsByAPI();\r\n    // this.clients = this.clService.getClients();\r\n    this.clService.addToClients.subscribe(\r\n      (clients) => {\r\n        this.clients = clients;\r\n      }\r\n    )\r\n\r\n   \r\n\r\n    this.searchForm = new FormGroup({\r\n      'search': new FormControl(null, Validators.required)\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n    // console.log(this.searchForm.value.search);\r\n    const searchvalue:string = this.searchForm.value.search\r\n    this.clients = this.clService.filterClients(searchvalue);\r\n    this.searchForm.setValue({\r\n      search: ''\r\n    })\r\n  }\r\n\r\n  reloadTable(){\r\n    this.clients = this.clService.getClients();\r\n  }\r\n\r\n\r\n}\r\n","<form [formGroup]=\"searchForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"pull-right\">\r\n        <input type=\"search\" formControlName=\"search\" class=\"form-control\" placeholder=\"Search by Last Name. . .\" #search/>\r\n        <button type=\"submit\" hidden></button>\r\n    </div>\r\n</form>\r\n\r\n<div class=\"pull-left\">\r\n    <button type=\"button\" class=\"btn btn-outline-warning btn-sm\" (click)=\"reloadTable()\">\r\n        <i class=\"fa fa-history\"></i> Reload\r\n    </button>\r\n</div>\r\n\r\n<div class=\"table-responsive\">\r\n    <table class=\"table table-hover table-striped\">\r\n        <thead class=\"bg-primary text-light\">\r\n          <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Primary Legal Counsel</th>\r\n                <th>Date of Birth</th>\r\n                <th>Image</th>\r\n                <th>Date Profiled</th>\r\n                <th colspan=\"2\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let client of clients; let i = index\">\r\n                <th>{{ i + 1 }}</th>\r\n                <td>{{ client.fname }} {{ client.lname }}</td>\r\n                <td>{{ client.email }}</td>\r\n                <td>{{ client.plc }}</td>\r\n                <td>{{ client.dob }}</td>\r\n                <td>\r\n                    <img *ngIf=\"client.image; else noImage\" [src]=\"client.image\" [alt]=\"client.fname\" class=\"img-fluid\"/>\r\n                    <ng-template #noImage>\r\n                        <p class=\"text-center\">\r\n                            <em class=\"text-danger\">No Image</em>\r\n                        </p>\r\n                    </ng-template>\r\n                </td>\r\n                <td>{{ client.datec }}</td>\r\n                <td>\r\n                    <a [routerLink]=\"['/clients/view/'+client._id]\">\r\n                        <button type=\"button\" class=\"btn btn-outline-primary btn-sm\">\r\n                            <i class=\"fa fa-eye\"></i>\r\n                        </button>\r\n                    </a>\r\n                    \r\n                <td>\r\n                    <a [routerLink]=\"['/clients/edit/'+client._id]\">\r\n                        <button type=\"button\" class=\"btn btn-outline-warning btn-sm\">\r\n                            <i class=\"fa fa-edit\"></i>\r\n                        </button>\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n    \r\n</div>\r\n\r\n\r\n  \r\n  ","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Client } from '../clients.model';\r\nimport { ClientsService } from '../clients.service';\r\n\r\n@Component({\r\n  selector: 'app-client-view',\r\n  templateUrl: './client-view.component.html',\r\n  styleUrls: ['./client-view.component.css']\r\n})\r\nexport class ClientViewComponent implements OnInit {\r\n  client: Client[] = [];\r\n\r\n  clientid: string;\r\n\r\n  constructor(private clService: ClientsService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.clientid = this.route.snapshot.params['id'];\r\n    \r\n    this.clService.getClient(this.clientid);\r\n\r\n    this.clService.fetchClient.subscribe(\r\n      (client) => {\r\n        this.client = client;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"content\" *ngFor=\"let client of client\">\r\n    <div class=\"text-center\">\r\n        <h3>Client's Data</h3>\r\n        <img [src]=\"client.image\" [alt]=\"client.fname\" class=\"img-thumbnail\" style=\"max-height: 300px; max-width: 280px; min-height: 300px; min-width: 280px\"/>\r\n    </div><br/>\r\n    <table class=\"table-bordered\" width=\"100%\" cellpadding=\"10\">\r\n        <tbody>\r\n            <tr>\r\n                <th>Client's Name</th>\r\n                <td>{{ client.fname }} {{ client.lname }}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Client's Email</th>\r\n                <td>{{ client.email }}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Client's DOB</th>\r\n                <td>{{ client.dob }}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Date Profiled</th>\r\n                <td>{{ client.datec }}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Primary Legal Counsel</th>\r\n                <td>{{ client.plc }}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Case details</th>\r\n                <td>{{ client.casedetails }}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n\r\n    <div class=\"text-center view\">\r\n        <a href=\"javascript:print()\" class=\"btn btn-outline-primary\">\r\n            <i class=\"fa fa-print\"></i> Print\r\n        </a>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Client } from './clients.model';\r\nimport { ClientsService } from './clients.service';\r\n\r\n@Component({\r\n  selector: 'app-clients',\r\n  templateUrl: './clients.component.html',\r\n  styleUrls: ['./clients.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ClientsComponent implements OnInit {\r\n  client: Client[] = [];\r\n\r\n  clientid: string;\r\n\r\n  constructor(private clService: ClientsService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.clientid = this.route.snapshot.params['id'];\r\n    \r\n    this.clService.getClient(this.clientid);\r\n\r\n    this.clService.fetchClient.subscribe(\r\n      (client) => {\r\n        this.client = client;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<br>\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4 view\">\r\n            <div class=\"list-group\">\r\n                <a routerLink=\"/clients/add\" routerLinkActive=\"active\" class=\"list-group-item list-group-item-action\">Add Client</a>\r\n                <a routerLink=\"/clients/list\" routerLinkActive=\"active\" class=\"list-group-item list-group-item-action\">Clients' List</a>\r\n                <a routerLink=\"/clients/view\" routerLinkActive=\"active\" href=\"#\" class=\"list-group-item list-group-item-action disabled\" tabindex=\"-1\" aria-disabled=\"true\">Client's Profile</a>\r\n                <a routerLink=\"/clients/edit\" routerLinkActive=\"active\" href=\"#\" class=\"list-group-item list-group-item-action disabled\" tabindex=\"-1\" aria-disabled=\"true\">Update Client</a>\r\n              </div>\r\n        </div>\r\n        <div class=\"col-md-8\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Injectable, OnInit } from \"@angular/core\";\r\nimport { HttpClient , HttpHeaders } from '@angular/common/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { Client } from \"./clients.model\";\r\nimport { Subject } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class ClientsService implements OnInit {\r\n    clients: Client[] = [];\r\n\r\n    client: Client[] = [];\r\n\r\n    addToClients = new Subject<Client[]>();\r\n\r\n    fetchClient = new Subject<Client[]>();\r\n\r\n    constructor(private http: HttpClient){}\r\n\r\n    ngOnInit(): void {\r\n        this.getClientsByAPI();\r\n    }\r\n\r\n    getClients(){\r\n        return this.clients.slice();\r\n    }\r\n\r\n    getClient(id:string){\r\n        this.http.get<{message: string, clients: Client[]}>('http://localhost:3000/api/clients/fetch/'+id)\r\n        .subscribe(\r\n            (clientData) => {\r\n                this.client = clientData.clients;\r\n                this.fetchClient.next([...this.client]);\r\n            }\r\n        );\r\n    }\r\n\r\n    filterClients(value:string){\r\n        const filteredClients: Client[] = [];\r\n\r\n        for(let client of this.clients){\r\n            if(client.lname === value){\r\n                filteredClients.push(client);\r\n            }\r\n        }\r\n\r\n        return filteredClients;\r\n    }\r\n\r\n\r\n    getClientsByAPI(){\r\n        this.http.get<{message: string, clients: Client[]}>('http://localhost:3000/api/clients/fetch')\r\n        .subscribe(\r\n            (clientData) => {\r\n                this.clients = clientData.clients;\r\n                this.addToClients.next([...this.clients]);\r\n            }\r\n        );\r\n        \r\n    }\r\n\r\n    // addClient(newClient){\r\n    //     var headers = new HttpHeaders();\r\n\r\n    //     headers.append('Content-Type', 'application-json');\r\n\r\n    //     return this.http.post('http://localhost:3000/api/clients/add', newClient, {headers: headers})\r\n    //     .map((res: Response) => res.json());\r\n    // }\r\n\r\n    deleteClient(id){\r\n        return this.http.delete('http://localhost:3000/api/clients/delete/'+id)\r\n        .map((res: Response) => res.json());\r\n    }\r\n\r\n    addClient(client: Client){\r\n        const clientData = new FormData();\r\n\r\n        clientData.append(\"fname\", client.fname);\r\n        clientData.append(\"lname\", client.lname);\r\n        clientData.append(\"email\", client.email);\r\n        clientData.append(\"datec\", client.datec);\r\n        clientData.append(\"dob\", client.dob);\r\n        clientData.append(\"plc\", client.plc);\r\n        clientData.append(\"casedetails\", client.casedetails);\r\n\r\n        if(client.image){\r\n            clientData.append(\"image\", client.image);\r\n            this.http.post<{msg: string, client: Client}>(\"http://localhost:3000/api/clients/add/image\", clientData)\r\n            .subscribe(\r\n                (clientData) => {\r\n                    const client: Client = {\r\n                        _id: clientData.client._id,\r\n                        fname: clientData.client.fname,\r\n                        lname: clientData.client.lname,\r\n                        email: clientData.client.email,\r\n                        dob: clientData.client.dob,\r\n                        datec: clientData.client.datec,\r\n                        casedetails: clientData.client.casedetails,\r\n                        plc: clientData.client.plc,\r\n                        image: clientData.client.image\r\n                    }\r\n                    this.clients.push(client);\r\n                    this.addToClients.next([...this.clients]);\r\n                }\r\n            );\r\n        }else{\r\n            this.http.post<{msg: string, client: Client}>(\"http://localhost:3000/api/clients/add\", client)\r\n            .subscribe(\r\n                (clientData) => {\r\n                    const client: Client = {\r\n                        _id: clientData.client._id,\r\n                        fname: clientData.client.fname,\r\n                        lname: clientData.client.lname,\r\n                        email: clientData.client.email,\r\n                        dob: clientData.client.dob,\r\n                        datec: clientData.client.datec,\r\n                        casedetails: clientData.client.casedetails,\r\n                        plc: clientData.client.plc,\r\n                        image: clientData.client.image\r\n                    }\r\n                    this.clients.push(client);\r\n                    this.addToClients.next([...this.clients]);\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n    updateClient(client: Client, id: string): any{\r\n        const clientData = new FormData();\r\n\r\n        clientData.append(\"fname\", client.fname);\r\n        clientData.append(\"lname\", client.lname);\r\n        clientData.append(\"email\", client.email);\r\n        clientData.append(\"dob\", client.dob);\r\n        clientData.append(\"plc\", client.plc);\r\n        clientData.append(\"casedetails\", client.casedetails);\r\n\r\n        if(client.image){\r\n            clientData.append(\"image\", client.image);\r\n            this.http.put<{msg: string, client: Client}>(\"http://localhost:3000/api/clients/updateWithImage/\"+id, clientData)\r\n            .subscribe(\r\n                (clientData) => {\r\n                    if(clientData.msg === 'success'){\r\n                        return 'success';\r\n                    }else{\r\n                        return 'failed';\r\n                    }\r\n                }\r\n            );\r\n        }else{\r\n            this.http.put<{msg: string, client: Client}>(\"http://localhost:3000/api/clients/update/\"+id, client)\r\n            .subscribe(\r\n                (clientData) => {\r\n                    if(clientData.msg === 'success'){\r\n                        return 'success';\r\n                    }else{\r\n                        return 'failed';\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    getDate(){\r\n        const today = new Date().toDateString();\r\n        return today;\r\n      }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <a class=\"navbar-brand font-weight-bold\" [routerLink]=\"['/clients/add']\">Law Firm X (Profiling System)</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n  \r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/clients/add']\">Home <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n      </ul>\r\n      <!-- <form class=\"form-inline my-2 my-lg-0\">\r\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n        <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n      </form> -->\r\n    </div>\r\n  </nav>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h3 class=\"text-danger text-center\">This page was not found...!</h3>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}